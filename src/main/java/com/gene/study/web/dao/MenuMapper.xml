<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gene.study.web.dao.MenuMapper">
  <resultMap id="BaseResultMap" type="com.gene.study.web.model.Menu">
    <id column="id" jdbcType="int" property="id" />
    <result column="name" jdbcType="String" property="name" />
    <result column="url" jdbcType="String" property="url" />
    <result column="pid" jdbcType="int" property="pid" />
    <result column="iconcode" jdbcType="String" property="iconcode" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, url, pid, iconcode
  </sql>
  <select id="selectByExample" parameterType="com.gene.study.web.model.MenuExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from menu
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from menu
    where id = #{id,jdbcType=int}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from menu
    where id = #{id,jdbcType=int}
  </delete>
  <delete id="deleteByExample" parameterType="com.gene.study.web.model.MenuExample">
    delete from menu
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.gene.study.web.model.Menu">
    insert into menu (id, name, url, pid, 
      iconcode)
    values (#{id,jdbcType=int}, #{name,jdbcType=String}, #{url,jdbcType=String}, #{pid,jdbcType=int}, 
      #{iconcode,jdbcType=String})
  </insert>
  <insert id="insertSelective" parameterType="com.gene.study.web.model.Menu">
    insert into menu
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="pid != null">
        pid,
      </if>
      <if test="iconcode != null">
        iconcode,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=int},
      </if>
      <if test="name != null">
        #{name,jdbcType=String},
      </if>
      <if test="url != null">
        #{url,jdbcType=String},
      </if>
      <if test="pid != null">
        #{pid,jdbcType=int},
      </if>
      <if test="iconcode != null">
        #{iconcode,jdbcType=String},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gene.study.web.model.MenuExample" resultType="java.lang.Integer">
    select count(*) from menu
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update menu
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=int},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=String},
      </if>
      <if test="record.url != null">
        url = #{record.url,jdbcType=String},
      </if>
      <if test="record.pid != null">
        pid = #{record.pid,jdbcType=int},
      </if>
      <if test="record.iconcode != null">
        iconcode = #{record.iconcode,jdbcType=String},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update menu
    set id = #{record.id,jdbcType=int},
      name = #{record.name,jdbcType=String},
      url = #{record.url,jdbcType=String},
      pid = #{record.pid,jdbcType=int},
      iconcode = #{record.iconcode,jdbcType=String}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gene.study.web.model.Menu">
    update menu
    <set>
      <if test="name != null">
        name = #{name,jdbcType=String},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=String},
      </if>
      <if test="pid != null">
        pid = #{pid,jdbcType=int},
      </if>
      <if test="iconcode != null">
        iconcode = #{iconcode,jdbcType=String},
      </if>
    </set>
    where id = #{id,jdbcType=int}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gene.study.web.model.Menu">
    update menu
    set name = #{name,jdbcType=String},
      url = #{url,jdbcType=String},
      pid = #{pid,jdbcType=int},
      iconcode = #{iconcode,jdbcType=String}
    where id = #{id,jdbcType=int}
  </update>
  <resultMap id="BaseResultMap" type="com.gene.study.web.model.Menu">
    <id column="id" jdbcType="int" property="id" />
    <result column="mname" jdbcType="String" property="mname" />
    <result column="murl" jdbcType="String" property="murl" />
    <result column="pid" jdbcType="int" property="pid" />
    <result column="iconcode" jdbcType="String" property="iconcode" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, mname, murl, pid, iconcode
  </sql>
  <select id="selectByExample" parameterType="com.gene.study.web.model.MenuExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from menu
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from menu
    where id = #{id,jdbcType=int}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from menu
    where id = #{id,jdbcType=int}
  </delete>
  <delete id="deleteByExample" parameterType="com.gene.study.web.model.MenuExample">
    delete from menu
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.gene.study.web.model.Menu">
    insert into menu (id, mname, murl, pid, 
      iconcode)
    values (#{id,jdbcType=int}, #{mname,jdbcType=String}, #{murl,jdbcType=String}, #{pid,jdbcType=int}, 
      #{iconcode,jdbcType=String})
  </insert>
  <insert id="insertSelective" parameterType="com.gene.study.web.model.Menu">
    insert into menu
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="mname != null">
        mname,
      </if>
      <if test="murl != null">
        murl,
      </if>
      <if test="pid != null">
        pid,
      </if>
      <if test="iconcode != null">
        iconcode,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=int},
      </if>
      <if test="mname != null">
        #{mname,jdbcType=String},
      </if>
      <if test="murl != null">
        #{murl,jdbcType=String},
      </if>
      <if test="pid != null">
        #{pid,jdbcType=int},
      </if>
      <if test="iconcode != null">
        #{iconcode,jdbcType=String},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gene.study.web.model.MenuExample" resultType="java.lang.Integer">
    select count(*) from menu
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update menu
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=int},
      </if>
      <if test="record.mname != null">
        mname = #{record.mname,jdbcType=String},
      </if>
      <if test="record.murl != null">
        murl = #{record.murl,jdbcType=String},
      </if>
      <if test="record.pid != null">
        pid = #{record.pid,jdbcType=int},
      </if>
      <if test="record.iconcode != null">
        iconcode = #{record.iconcode,jdbcType=String},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update menu
    set id = #{record.id,jdbcType=int},
      mname = #{record.mname,jdbcType=String},
      murl = #{record.murl,jdbcType=String},
      pid = #{record.pid,jdbcType=int},
      iconcode = #{record.iconcode,jdbcType=String}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gene.study.web.model.Menu">
    update menu
    <set>
      <if test="mname != null">
        mname = #{mname,jdbcType=String},
      </if>
      <if test="murl != null">
        murl = #{murl,jdbcType=String},
      </if>
      <if test="pid != null">
        pid = #{pid,jdbcType=int},
      </if>
      <if test="iconcode != null">
        iconcode = #{iconcode,jdbcType=String},
      </if>
    </set>
    where id = #{id,jdbcType=int}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gene.study.web.model.Menu">
    update menu
    set mname = #{mname,jdbcType=String},
      murl = #{murl,jdbcType=String},
      pid = #{pid,jdbcType=int},
      iconcode = #{iconcode,jdbcType=String}
    where id = #{id,jdbcType=int}
  </update>
</mapper>